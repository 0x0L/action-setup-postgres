name: Setup PostgreSQL for Linux/macOS/Windows
author: Ihor Kalnytskyi
description: Setup a preinstalled PostgreSQL server.
branding:
  icon: database
  color: purple
inputs:
  username:
    description: The username of the user to setup.
    default: postgres
    required: false
  password:
    description: The password of the user to setup.
    default: postgres
    required: false
  database:
    description: The database name to setup and grant permissions to created user.
    default: postgres
    required: false
  port:
    description: The server port to listen on.
    default: "5432"
    required: false
outputs:
  connection-uri:
    description: The connection URI to connect to PostgreSQL.
    value: ${{ steps.connection-uri.outputs.value }}
runs:
  using: composite
  steps:
    - name: Prerequisites
      run: |
        if [ "$RUNNER_OS" == "Linux" ]; then
          echo "$(pg_config --bindir)" >> $GITHUB_PATH
        elif [ "$RUNNER_OS" == "Windows" ]; then
          echo "$PGBIN" >> $GITHUB_PATH
          echo "PQ_LIB_DIR=$PGROOT\lib" >> $GITHUB_ENV
        fi
      shell: bash

    - name: Setup and start PostgreSQL
      run: |
        export PGDATA="$RUNNER_TEMP/pgdata"

        # There are couple of reasons why we need to create a new PostgreSQL
        # database cluster. First and foremost, we have to create a superuser
        # with provided credentials. Second, we want the PostgreSQL client
        # applications [1] to be available for execution without
        # run-from-another-user dances. Third, we want to make sure that
        # settings are the same between operating systems and aren't changed by
        # package vendors.
        #
        # [1] https://www.postgresql.org/docs/15/reference-client.html
        initdb \
          --username="${{ inputs.username }}" \
          --encoding="UTF-8" \
          --locale="en_US.UTF-8" \
          --no-instructions

        # Do not create unix sockets since they are created by default in the
        # directory we have no permissions to (owned by system postgres user).
        echo "unix_socket_directories = ''" >> "$PGDATA/postgresql.conf"
        echo "port = ${{ inputs.port }}" >> "$PGDATA/postgresql.conf"
        pg_ctl start

        # Set environment variables for PostgreSQL client applications [1] such
        # as 'psql' or 'createuser'.
        #
        # PGHOST is required for Linux/macOS because we turned off unix sockets
        # and they use them by default.
        #
        # PGPORT, PGUSER and PGDATABASE are required because they could be
        # parametrized via action input parameters.
        #
        # [1] https://www.postgresql.org/docs/15/reference-client.html
        echo "PGHOST=localhost" >> $GITHUB_ENV
        echo "PGPORT=${{ inputs.port }}" >> $GITHUB_ENV
        echo "PGUSER=${{ inputs.username }}" >> $GITHUB_ENV
        echo "PGDATABASE=${{ inputs.database }}" >> $GITHUB_ENV
      shell: bash

    - name: Setup PostgreSQL database
      run: |
        # The 'postgres' database is a pre-created database meant for use by
        # users, utilities and third party applications. There's no way to
        # parametrize the name, so all we can do is to avoid creating a
        # database if provided name is 'postgres'.
        if [ "${{ inputs.database }}" != "postgres" ]; then
          createdb -O "${{ inputs.username }}" "${{ inputs.database }}"
        fi
      shell: bash

    - name: Expose connection URI
      run: |
        CONNECTION_URI="postgresql://${{ inputs.username }}:${{ inputs.password }}@localhost:${{inputs.port}}/${{ inputs.database }}"
        echo "value=$CONNECTION_URI" >> $GITHUB_OUTPUT
      shell: bash
      id: connection-uri
